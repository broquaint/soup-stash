#!/usr/bin/env ruby

# Assumes this is executed as ./script/$0
$LOAD_PATH.unshift './lib'

require 'slop'
require 'soupstash/ingestlogfile'
require 'soupstash/ingestlogfile/offsetstate'
require 'net/http/follow_tail'

def get_opts
  opts = Slop.new(help: true) do
    banner = 'Usage: keeping-up-with-the-logs [--help] URL'

    on :v, :verbose, 'Be verbose in output'
    on :p, :poll=,   'How often to poll in the log serever', as: Integer
  end
  opts.parse

  return opts
end

def parse_logs(parser, uris, opts)
  offsets   = uris.reduce({}) {|r, u| r.merge u => IngestLogfile::OffsetState.new(u)}
  to_follow = uris.collect do |u|
    {
      uri:     u,
      offset:  offsets[u].get_latest,
      wait:    opts[:poll],
    }
  end
  ingester = IngestLogfile.new

  puts %Q{Going to follow:\n\t#{uris.join("\n\t")}\n\n}
  
  Net::HTTP::FollowTail.follow(to_follow) do |result, tailer|
    puts "[#{Time.now}] Now at #{tailer.offset.to_i} for #{tailer.uri}" if opts.verbose?

    logfile_lines = result.content.split("\n")
    parser.import_from(logfile_lines) do |game|
      if game.class == Hash
        ingester.commit_game(game, tailer.uri)
      else
        # XXX There seems to be an off-by-one error, not quite sure how though.
        puts "!!! Couldn't make sense of: #{game}\n#{logfile_lines}" if tailer.verbose
      end
    end
    offsets[tailer.uri.to_s].update_to tailer.offset
  end
end

logfile_uris = %w[
  http://crawl.develz.org/allgames-0.12.txt
  http://crawl.develz.org/allgames-0.11.txt
  http://dobrazupa.org/meta/0.12/logfile
  http://dobrazupa.org/meta/0.11/logfile
]

parser = IngestLogfile::Parser.new

begin
  parse_logs parser, logfile_uris, get_opts
rescue Interrupt
  parser.finish_parsing
end
